  HuffmanTree.cpp
c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(56): error C2259: “HNode<T>”: 不能实例化抽象类
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(56): note: 由于下列成员:
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(56): note: “int HNode<T>::weight(void)”: 是抽象的
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(12): note: 参见“HNode<T>::weight”的声明
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(56): note: “bool HNode<T>::isLeaf(void)”: 是抽象的
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(13): note: 参见“HNode<T>::isLeaf”的声明
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(83): note: 参见对正在编译的 类 模板 实例化 "InNode<T>" 的引用
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(81): note: 编译 类 模板 成员函数 "HuffTree<char>::HuffTree(HuffTree<char> *,HuffTree<char> *)" 时
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(155): note: 参见对正在编译的函数 模板 实例化“HuffTree<char>::HuffTree(HuffTree<char> *,HuffTree<char> *)”的引用
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(175): note: 参见对正在编译的 类 模板 实例化 "HuffTree<char>" 的引用
c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(60): error C2259: “HNode<T>”: 不能实例化抽象类
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(60): note: 由于下列成员:
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(60): note: “int HNode<T>::weight(void)”: 是抽象的
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(12): note: 参见“HNode<T>::weight”的声明
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(60): note: “bool HNode<T>::isLeaf(void)”: 是抽象的
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(13): note: 参见“HNode<T>::isLeaf”的声明
          with
          [
              T=char
          ]
c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(66): error C2259: “HNode<T>”: 不能实例化抽象类
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(66): note: 由于下列成员:
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(66): note: “int HNode<T>::weight(void)”: 是抽象的
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(12): note: 参见“HNode<T>::weight”的声明
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(66): note: “bool HNode<T>::isLeaf(void)”: 是抽象的
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(13): note: 参见“HNode<T>::isLeaf”的声明
          with
          [
              T=char
          ]
c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(83): error C2664: “InNode<T>::InNode(InNode<T> &&)”: 无法将参数 1 从“HuffTree<char> *”转换为“HNode<T> *”
          with
          [
              T=char
          ]
  c:\users\lmx\source\labs\data struct labs\lab2\2.d\2.d\huffmantree.cpp(83): note: 与指向的类型无关；强制转换要求 reinterpret_cast、C 样式强制转换或函数样式强制转换
